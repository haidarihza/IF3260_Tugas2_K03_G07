// Fill the buffer with the values that define a letter 'F'.
function setGeometry(gl) {
  // buffer data for HOLLOW CUBE
  let a = 150.0
  let b = 25.0
  let c = a+b
  let d = a+2*b

  gl.bufferData(
    gl.ARRAY_BUFFER,
    new Float32Array([
      // solid hollow cube
      // front face
      0, 0, 0, 0, d, 0, b, 0, 0, 0, d, 0, b, d, 0, b, 0, 0,
      //
      c, 0, 0, c, d, 0, d, 0, 0, c, d, 0, d, d, 0, d, 0, 0,
      //
      b, 0, 0, b, b, 0, c, 0, 0, b, b, 0, c, b, 0, c, 0, 0,
      //
      b, c, 0, b, d, 0, c, c, 0, b, d, 0, c, d, 0, c, c, 0,
      // border
      b, b, 0, b, c, 0, b, b, b, b, c, 0, b, c, b, b, b, b,
      //
      c, b, 0, c, c, 0, c, b, b, c, c, 0, c, c, b, c, b, b,
      //
      b, b, 0, c, b, b, c, b, 0, c, b, b, b, b, 0, b, b, b,
      //
      b, c, 0, c, c, 0, b, c, b, c, c, 0, c, c, b, b, c, b, 
      
      // left face
      0, 0, 0, 0, 0, b, 0, d, 0, 0, 0, b, 0, d, b, 0, d, 0,
      //
      0, 0, c, 0, 0, d, 0, d, c, 0, 0, d, 0, d, d, 0, d, c,
      //
      0, 0, b, 0, 0, c, 0, b, b, 0, 0, c, 0, b, c, 0, b, b,
      //
      0, c, b, 0, c, c, 0, d, b, 0, c, c, 0, d, c, 0, d, b,
      // border
      0, b, b, 0, b, c, b, b, b, 0, b, c, b, b, c, b, b, b,
      //
      0, c, b, b, c, c, 0, c, c, b, c, c, 0, c, b, b, c, b,
      //
      0, b, b, b, c, b, 0, c, b, b, c, b, 0, b, b, b, b, b,
      //
      0, b, c, b, c, c, b, b, c, b, c, c, 0, b, c, 0, c, c,

      // right face
      d, 0, 0, d, d, 0, d, 0, b, d, d, 0, d, d, b, d, 0, b,
      //
      d, 0, c, d, d, c, d, 0, d, d, d, c, d, d, d, d, 0, d,
      //
      d, 0, b, d, b, b, d, 0, c, d, b, b, d, b, c, d, 0, c,
      //
      d, c, b, d, d, b, d, c, c, d, d, b, d, d, c, d, c, c,
      // border
      d, b, b, c, b, c, d, b, c, c, b, c, d, b, b, c, b, b,
      //
      d, c, b, c, c, c, c, c, b, c, c, c, d, c, b, d, c, c,
      //
      d, b, b, c, c, b, c, b, b, c, c, b, d, b, b, d, c, b,
      //
      d, b, c, c, c, c, d, c, c, c, c, c, d, b, c, c, b, c,

      // back face
      0, 0, d, b, 0, d, 0, d, d, b, 0, d, b, d, d, 0, d, d,
      //
      c, 0, d, d, 0, d, c, d, d, d, 0, d, d, d, d, c, d, d,
      //
      b, 0, d, c, 0, d, b, b, d, c, 0, d, c, b, d, b, b, d,
      //
      b, c, d, c, c, d, b, d, d, c, c, d, c, d, d, b, d, d,
      // border
      b, b, d, b, c, c, b, c, d, b, c, c, b, b, d, b, b, c,
      //
      c, b, d, c, c, c, c, b, c, c, c, c, c, b, d, c, c, d, 
      //
      b, b, d, c, b, c, b, b, c, c, b, c, b, b, d, c, b, d,
      //
      b, c, d, c, c, c, c, c, d, c, c, c, b, c, d, b, c, c, 

      // top face
      0, 0, 0, b, 0, d, 0, 0, d, b, 0, d, 0, 0, 0, b, 0, 0,
      //
      c, 0, 0, d, 0, d, c, 0, d, d, 0, d, c, 0, 0, d, 0, 0,
      //
      b, 0, 0, c, 0, b, b, 0, b, c, 0, b, b, 0, 0, c, 0, 0,
      //
      b, 0, c, c, 0, d, b, 0, d, c, 0, d, b, 0, c, c, 0, c,
      // border
      b, 0, b, b, b, c, b, 0, c, b, b, c, b, 0, b, b, b, b,
      //
      c, 0, b, c, b, c, c, b, b, c, b, c, c, 0, b, c, 0, c, 
      //
      b, 0, b, c, 0, b, b, b, b, c, 0, b, c, b, b, b, b, b,
      //
      b, 0, c, c, b, c, c, 0, c, c, b, c, b, 0, c, b, b, c,

      // bottom face
      0, d, 0, b, d, d, b, d, 0, b, d, d, 0, d, 0, 0, d, d,
      //
      c, d, 0, d, d, d, d, d, 0, d, d, d, c, d, 0, c, d, d,
      //
      b, d, 0, c, d, b, c, d, 0, c, d, b, b, d, 0, b, d, b,
      //
      b, d, c, c, d, d, c, d, c, c, d, d, b, d, c, b, d, d,
      // border
      b, d, b, b, c, c, b, c, b, b, c, c, b, d, b, b, d, c,
      //
      c, d, b, c, c, c, c, d, c, c, c, c, c, d, b, c, c, b, 
      //
      b, d, b, c, c, b, c, d, b, c, c, b, b, d, b, b, c, b, 
      //
      b, d, c, c, c, c, b, c, c, c, c, c, b, d, c, c, d, c, 

    ]),
    gl.STATIC_DRAW
  );
}
// Fill the buffer with colors for the 'F'.
function setColors(gl) {
  gl.bufferData(
    gl.ARRAY_BUFFER,
    new Uint8Array([
      // left column front
      200, 70, 120, 200, 70, 120, 200, 70, 120, 200, 70, 120, 200, 70, 120, 200,
      70, 120,
      //
      200, 70, 120, 200, 70, 120, 200, 70, 120, 200, 70, 120, 200, 70, 120, 200,
      70, 120,
      //
      200, 70, 120, 200, 70, 120, 200, 70, 120, 200, 70, 120, 200, 70, 120, 200,
      70, 120,
      //
      200, 70, 120, 200, 70, 120, 200, 70, 120, 200, 70, 120, 200, 70, 120, 200,
      70, 120,
      // border
      150, 70, 120, 150, 70, 120, 150, 70, 120, 150, 70, 120, 150, 70, 120, 150,
      70, 120,
      // 
      150, 70, 120, 150, 70, 120, 150, 70, 120, 150, 70, 120, 150, 70, 120, 150,
      70, 120,
      //
      150, 70, 120, 150, 70, 120, 150, 70, 120, 150, 70, 120, 150, 70, 120, 150,
      70, 120,
      //
      150, 70, 120, 150, 70, 120, 150, 70, 120, 150, 70, 120, 150, 70, 120, 150,
      70, 120,
      //

      200, 70, 25, 200, 70, 25, 200, 70, 25, 200, 70, 25, 200, 70, 25, 200,
      70, 25,
      //
      200, 70, 25, 200, 70, 25, 200, 70, 25, 200, 70, 25, 200, 70, 25, 200,
      70, 25,

      200, 70, 25, 200, 70, 25, 200, 70, 25, 200, 70, 25, 200, 70, 25, 200,
      70, 25,
      //
      200, 70, 25, 200, 70, 25, 200, 70, 25, 200, 70, 25, 200, 70, 25, 200,
      70, 25,
      // border
      150, 70, 25, 150, 70, 25, 150, 70, 25, 150, 70, 25, 150, 70, 25, 150,
      70, 25,
      //
      150, 70, 25, 150, 70, 25, 150, 70, 25, 150, 70, 25, 150, 70, 25, 150,
      70, 25,
      //
      150, 70, 25, 150, 70, 25, 150, 70, 25, 150, 70, 25, 150, 70, 25, 150,
      70, 25,
      //
      150, 70, 25, 150, 70, 25, 150, 70, 25, 150, 70, 25, 150, 70, 25, 150,
      70, 25,


      200, 70, 210, 200, 70, 210, 200, 70, 210, 200, 70, 210, 200, 70, 210, 200,
      70, 210,
      //
      200, 70, 210, 200, 70, 210, 200, 70, 210, 200, 70, 210, 200, 70, 210, 200,
      70, 210,
      //
      200, 70, 210, 200, 70, 210, 200, 70, 210, 200, 70, 210, 200, 70, 210, 200,
      70, 210,
      //
      200, 70, 210, 200, 70, 210, 200, 70, 210, 200, 70, 210, 200, 70, 210, 200,
      70, 210,

      // border
      150, 70, 210, 150, 70, 210, 150, 70, 210, 150, 70, 210, 150, 70, 210, 150,
      70, 210,
      //
      150, 70, 210, 150, 70, 210, 150, 70, 210, 150, 70, 210, 150, 70, 210, 150,
      70, 210,
      //
      150, 70, 210, 150, 70, 210, 150, 70, 210, 150, 70, 210, 150, 70, 210, 150,
      70, 210,
      //
      150, 70, 210, 150, 70, 210, 150, 70, 210, 150, 70, 210, 150, 70, 210, 150,
      70, 210,

      // back face
      200, 140, 210, 200, 140, 210, 200, 140, 210, 200, 140, 210, 200, 140, 210, 200,
      140, 210,
      //
      200, 140, 210, 200, 140, 210, 200, 140, 210, 200, 140, 210, 200, 140, 210, 200,
      140, 210,
      //
      200, 140, 210, 200, 140, 210, 200, 140, 210, 200, 140, 210, 200, 140, 210, 200,
      140, 210,
      // 
      200, 140, 210, 200, 140, 210, 200, 140, 210, 200, 140, 210, 200, 140, 210, 200,
      140, 210,
      // border
      150, 140, 210, 150, 140, 210, 150, 140, 210, 150, 140, 210, 150, 140, 210, 150,
      140, 210,
      // 
      150, 140, 210, 150, 140, 210, 150, 140, 210, 150, 140, 210, 150, 140, 210, 150,
      140, 210,
      //
      150, 140, 210, 150, 140, 210, 150, 140, 210, 150, 140, 210, 150, 140, 210, 150,
      140, 210,
      //
      150, 140, 210, 150, 140, 210, 150, 140, 210, 150, 140, 210, 150, 140, 210, 150,
      140, 210,

      // top face
      100, 220, 210, 100, 220, 210, 100, 220, 210, 100, 220, 210, 100, 220, 210, 100,
      220, 210,
      //
      100, 220, 210, 100, 220, 210, 100, 220, 210, 100, 220, 210, 100, 220, 210, 100,
      220, 210,
      //
      100, 220, 210, 100, 220, 210, 100, 220, 210, 100, 220, 210, 100, 220, 210, 100,
      220, 210,
      //
      100, 220, 210, 100, 220, 210, 100, 220, 210, 100, 220, 210, 100, 220, 210, 100,
      220, 210,
      // border
      100, 50, 210, 100, 50, 210, 100, 50, 210, 100, 50, 210, 100, 50, 210, 100,
      50, 210,
      //
      100, 50, 210, 100, 50, 210, 100, 50, 210, 100, 50, 210, 100, 50, 210, 100,
      50, 210,
      //
      100, 50, 210, 100, 50, 210, 100, 50, 210, 100, 50, 210, 100, 50, 210, 100,
      50, 210,
      //
      100, 50, 210, 100, 50, 210, 100, 50, 210, 100, 50, 210, 100, 50, 210, 100,
      50, 210,

      // bottom face
      100, 220, 50, 100, 220, 50, 100, 220, 50, 100, 220, 50, 100, 220, 50, 100,
      220, 50,
      //
      100, 220, 50, 100, 220, 50, 100, 220, 50, 100, 220, 50, 100, 220, 50, 100,
      220, 50,
      //
      100, 220, 50, 100, 220, 50, 100, 220, 50, 100, 220, 50, 100, 220, 50, 100,
      220, 50,
      //
      100, 220, 50, 100, 220, 50, 100, 220, 50, 100, 220, 50, 100, 220, 50, 100,
      220, 50,
      // border
      100, 50, 50, 100, 50, 50, 100, 50, 50, 100, 50, 50, 100, 50, 50, 100,
      50, 50,
      //
      100, 50, 50, 100, 50, 50, 100, 50, 50, 100, 50, 50, 100, 50, 50, 100,
      50, 50,
      //
      100, 50, 50, 100, 50, 50, 100, 50, 50, 100, 50, 50, 100, 50, 50, 100,
      50, 50,
      //
      100, 50, 50, 100, 50, 50, 100, 50, 50, 100, 50, 50, 100, 50, 50, 100,
      50, 50,
      
    


    ]),
    gl.STATIC_DRAW
  );
}